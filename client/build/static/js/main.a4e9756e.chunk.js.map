{"version":3,"sources":["helper/constant.js","components/Home.js","components/common/ModalComponent.js","components/admin/Collections/CollectionEdit.js","components/admin/Paintings/PaintingEdit.js","components/admin/HomeAdmin.js","components/common/FileUploader.js","components/common/CustomSnackbar.js","components/common/CustomSelect.js","components/common/CardHorizontal.js","components/Galleries.js","components/Gallery.js","components/Information.js","components/Contact.js","components/admin/Collections/CollectionCreate.js","components/admin/Collections/Collection.js","components/admin/Paintings/PaintingCreate.js","components/admin/Paintings/Painting.js","components/common/DropdownBar.js","components/admin/Admin.js","components/Main.js","App.js","serviceWorker.js","index.js"],"names":["__webpack_exports__","Home","_useState","useState","_useState2","Object","_Users_valentindupetitpre_Documents_JS_PERSO_react_maman_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_2__","homePageDataText","setHomePageDataText","_useState3","_useState4","pic1","setPic1","_useState5","_useState6","pic2","setPic2","_useState7","_useState8","pic3","setPic3","useEffect","getDataTextHome","getDataPicsHome","_ref","_Users_valentindupetitpre_Documents_JS_PERSO_react_maman_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","_Users_valentindupetitpre_Documents_JS_PERSO_react_maman_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","a","mark","_callee","wrap","_context","prev","next","fetch","concat","configURL","then","response","json","result","stop","this","apply","arguments","_ref2","_callee2","_context2","imageStr1","data","Buffer","from","toString","imageStr2","imageStr3","react__WEBPACK_IMPORTED_MODULE_3___default","createElement","className","title","src","alt","title_bloc1","bloc1","title_bloc2","bloc2","style","backgroundImage","title_bloc3","bloc3","ModalComponent","props","visible","setVisible","painting","setPainting","currentId","setCurrentId","swipeAbs","setSwipeAbs","_useState9","_useState10","swiping","setSwiping","window","onpopstate","e","closeModal","open","idPainting","fetchPainting","document","addEventListener","keyDown","removeEventListener","key","goLeft","goRight","id","map","imageStr","pic","_x","paintingId","idsArray","indexOf","close","startTouching","touch","touches","clientX","touching","changedTouches","length","endTouching","abscisse","Math","abs","onClick","onTouchStart","onTouchMove","onTouchEnd","name","detail","CollectionEdit","collections","setCollections","newBlob","setNewBlob","selected","setSelected","isReinit","setIsReinit","openSnack","setOpenSnack","_useState11","_useState12","snackText","setSnackText","collectionNames","getCollection","handleEdit","event","body","headers","preventDefault","FormData","target","JSON","stringify","get","content-type","accept","method","handleReinit","_x2","handleDelete","_ref3","_callee3","_context3","console","log","changeInCollec","_common_CustomSelect__WEBPACK_IMPORTED_MODULE_10__","reinit","list","handleChange","collecId","onSubmit","noValidate","autoComplete","_material_ui_core_TextField__WEBPACK_IMPORTED_MODULE_4___default","required","label","defaultValue","margin","fullWidth","multiline","_common_FileUploader__WEBPACK_IMPORTED_MODULE_11__","parentGiveImg","parentGetImg","img","_material_ui_core_Button__WEBPACK_IMPORTED_MODULE_5___default","variant","color","_material_ui_core_Icon__WEBPACK_IMPORTED_MODULE_6___default","type","_material_ui_icons_Delete__WEBPACK_IMPORTED_MODULE_7___default","_common_CustomSnackbar__WEBPACK_IMPORTED_MODULE_12__","handleOpen","text","PaintingEdit","tableauxName","setTableauxName","setCollectionNames","setCollecId","getCollectionName","getTableauxName","push","getTableau","collectionId","_ref4","_callee4","_context4","_common_CustomSelect__WEBPACK_IMPORTED_MODULE_11__","tableauId","init","_common_FileUploader__WEBPACK_IMPORTED_MODULE_12__","HomeAdmin","homePageData","setHomePageData","blob1","setBlob1","blob2","setBlob2","blob3","setBlob3","_getHomePageData","getHomePageData","handleSubmit","status","_common_FileUploader__WEBPACK_IMPORTED_MODULE_9__","_common_CustomSnackbar__WEBPACK_IMPORTED_MODULE_10__","FileUploader","_Users_valentindupetitpre_Documents_JS_PERSO_react_maman_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","active","setActive","imageSrc","setImageSrc","loaded","setLoaded","labelClass","setLabelClass","baseColor","borderColor","setBorderColor","iconColor","setIconColor","border","activeColor","icon","overlayColor","react__WEBPACK_IMPORTED_MODULE_1___default","onDragEnter","onDragLeave","onDragOver","onDrop","onFileChange","dataTransfer","files","outlineColor","undefined","onChange","fileInput","file","reader","FileReader","match","onload","readAsDataURL","alert","defaultProps","CustomSnackbar","setOpen","handleClose","reason","_material_ui_core_Snackbar__WEBPACK_IMPORTED_MODULE_2___default","anchorOrigin","vertical","horizontal","autoHideDuration","onClose","ContentProps","aria-describedby","message","action","_material_ui_core_IconButton__WEBPACK_IMPORTED_MODULE_3___default","aria-label","padding","_material_ui_icons_Close__WEBPACK_IMPORTED_MODULE_4___default","CustomSelect","listName","setListName","selectList","unit","i","_material_ui_core_MenuItem__WEBPACK_IMPORTED_MODULE_4___default","value","_material_ui_core_FormControl__WEBPACK_IMPORTED_MODULE_5___default","_material_ui_core_InputLabel__WEBPACK_IMPORTED_MODULE_3___default","htmlFor","_material_ui_core_Select__WEBPACK_IMPORTED_MODULE_6___default","newVal","input","_material_ui_core_OutlinedInput__WEBPACK_IMPORTED_MODULE_2___default","labelWidth","ImageComponent","lazy","__webpack_require__","bind","CardHorizontal","react_default","react","fallback","collection","idCollection","withRouter","slicedToArray","getCollectionsText","asyncToGenerator","regenerator_default","reverse","collec","history","common_CardHorizontal","SmallImageComponent","Gallery","paintings","setPaintings","openModal","setOpenModal","idForModal","setIdForModal","setIdsArray","collectionName","setCollectionName","params","initGallery","paintingData","sortPaintings","callModal","callParent","notifyModalCall","array","galleryContent","getElementById","columns","floor","clientWidth","out","col","_val","reduce","acc","createArrayOfIds","Information","Contact","errorName","setErrorName","errorMail","setErrorMail","errorMessage","setErrorMessage","validateLength","validEmailFormat","test","checkErrors","email","submit","subject","reset","TextField_default","error","Button_default","Icon_default","CollectionCreate","handleSubmitCreate","Collection","triggerCollec","Collections_CollectionCreate","PaintingCreate","selectedCollection","setSelectedCollection","likes","updatePainting","find","Painting","updatePaintingTrigger","setUpdatePaintingTrigger","Paintings_PaintingCreate","updatePaintings","DropdownBar","ExpansionPanel_default","ExpansionPanelSummary_default","expandIcon","ExpandMore_default","ExpansionPanelDetails_default","children","Admin","common_DropdownBar","Collections_Collection","Paintings_Painting","Main","modalChangeState","changeScrollBecauseModal","Switch","Route","exact","path","component","Galleries","render","components_Gallery","assign","App","openTab","setOpenTab","inAdminPage","classContent","setClassContent","height","changeTab","Number","currentTarget","dataset","innerWidth","querySelector","MaterialLayout","toggleDrawer","lib","components_Main","fixedDrawer","Link","data-id","to","pageLayout","Boolean","location","hostname","ReactDOM","BrowserRouter","src_App","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a4e9756e.chunk.js","sourcesContent":["const prod = {\n    url: {\n     API_URL: 'https://sheltered-dusk-71937.herokuapp.com',\n   }\n}\nconst dev = {\n    url: {\n     API_URL: 'http://localhost:5000'\n    }\n};\n\nconst configURL = process.env.NODE_ENV === 'development' ? 'dev.url.API_URL' : prod.url.API_URL\nexport default ''","import React, { useState, useEffect } from 'react'\nimport './Home.css'\nimport configURL from '../helper/constant'\n\nfunction Home() { \n    const [homePageDataText, setHomePageDataText] = useState({})\n    const [pic1, setPic1] = useState(null)\n    const [pic2, setPic2] = useState(null)\n    const [pic3, setPic3] = useState(null)\n\n    useEffect(()=>{\n        getDataTextHome();\n        getDataPicsHome();\n    },[])\n\n    const getDataTextHome = async()=>{\n        await fetch(`${configURL}/home-data/text`)\n        .then(response => response.json())\n        .then(result => setHomePageDataText(result[0]))\n    }\n\n    const getDataPicsHome = async ()=>{\n        await fetch(`${configURL}/home-data/pics`)\n        .then(response => response.json())\n        .then(result => {\n            const imageStr1 = result[0].pic1.data ? Buffer.from(result[0].pic1.data).toString('base64') : null;\n            const imageStr2 = result[0].pic2.data ? Buffer.from(result[0].pic2.data).toString('base64') : null;\n            const imageStr3 = result[0].pic3.data ? Buffer.from(result[0].pic3.data).toString('base64') : null;\n            setPic1(\"data:image/jpeg;base64,\"+imageStr1)\n            setPic2(\"data:image/jpeg;base64,\"+imageStr2)\n            setPic3(\"data:image/jpeg;base64,\"+imageStr3)\n        })\n    }\n\n    return(\n        <div className=\"accueil\">\n            <div className=\"home-title\">\n                <h2>{homePageDataText ? homePageDataText.title : \"\"}</h2>\n            </div>\n            <div className=\"col-container block-img-text\">\n                <div className=\"col\">\n                    <img src={pic1 ? pic1 : null} alt=\"\" className=\"presentation-img\"/>\n                </div>\n                <div className=\"col\">\n                    <div className=\"text\">\n                        <h3>{homePageDataText ? homePageDataText.title_bloc1 : ''}</h3>\n                        <p>{homePageDataText ? homePageDataText.bloc1 : ''}</p>\n                    </div>\n                </div>\n            </div>\n            <div className=\"col-container block-text-img\">\n                <div className=\"col\">\n                    <div className=\"text\">\n                        <h3>{homePageDataText ? homePageDataText.title_bloc2 : ''}</h3>\n                        <p>{homePageDataText ? homePageDataText.bloc2 : ''}</p>\n                    </div>\n                </div>\n                <div className=\"col\">\n                    <div style={{backgroundImage: \"url(\"+pic2+\")\"}} alt=\"\" className=\"parallax-img-right\">\n                    </div>\n                </div>\n            </div>\n            <div className=\"col-container block-img-text\">\n                <div className=\"col\">\n                    <div style={{backgroundImage: \"url(\"+pic3+\")\"}} alt=\"\" className=\"parallax-img-left\">\n                    </div>\n                </div>\n                <div className=\"col\">\n                    <div className=\"text\">\n                        <h3>{homePageDataText ? homePageDataText.title_bloc3 : ''}</h3>\n                        <p>{homePageDataText ? homePageDataText.bloc3 : ''}</p>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Home; ","import React, { useEffect, useState } from 'react'\nimport './ModalComponent.css'\nimport configURL from '../../helper/constant'\n\nfunction ModalComponent(props){\n    const [visible, setVisible] = useState(false)\n    const [painting, setPainting] = useState(null)\n    const [currentId, setCurrentId] = useState(null)\n    const [swipeAbs, setSwipeAbs] = useState(0)\n    const [swiping, setSwiping] = useState(false)\n\n    useEffect(()=> {\n        window.onpopstate = (e) => {\n            closeModal()\n        }\n        return () => closeModal()\n    }, [])\n\n\n    useEffect(()=>{\n        setVisible(props.open)\n    }, [props.open])\n\n    useEffect(()=>{\n        setCurrentId(props.idPainting)\n        fetchPainting(props.idPainting)\n    }, [props.idPainting])\n\n    useEffect(()=>{\n        setVisible(false)\n    },[])\n    useEffect(()=>{\n        document.addEventListener(\"keydown\", keyDown);\n        return () => {\n            document.removeEventListener(\"keydown\", keyDown);\n        }\n    })\n\n    const keyDown = (e) => {\n        switch (e.key) {\n            case 'ArrowLeft':\n                goLeft()\n                break;\n            case 'ArrowRight':\n                goRight()\n                break;\n            case 'Escape':\n                closeModal()\n                break;\n            default:\n                break;\n        }\n    }\n    \n    const fetchPainting = async (id)=>{\n        await fetch(`${configURL}/painting/`+id+'/pic')\n        .then(response => response.json())\n        .then(result => result.map(painting => {\n            const imageStr = painting.pic ? Buffer.from(painting.pic).toString('base64') : null;\n            painting.pic = \"data:image/jpeg;base64,\"+imageStr\n            setPainting(painting)\n            return null\n        }))\n    }\n\n    function goRight(){\n        const paintingId = props.idsArray.indexOf(currentId) +1\n        setCurrentId(props.idsArray[paintingId])\n        fetchPainting(props.idsArray[paintingId])\n    }\n    function goLeft(){\n        const paintingId = props.idsArray.indexOf(currentId) -1\n        setCurrentId(props.idsArray[paintingId])\n        fetchPainting(props.idsArray[paintingId])\n    }\n\n    function closeModal(){\n        setVisible(false)\n        props.close()\n        setPainting(null)\n    }\n\n    const startTouching = (e) => {\n        const touch = e.touches[0];\n        setSwipeAbs(touch.clientX);\n    }\n\n    const touching = (e) => {\n        if (e.changedTouches && e.changedTouches.length) {\n            setSwiping(true);\n        }\n    }\n    \n    const endTouching = (e) => {\n        const touch = e.changedTouches[0];\n        const abscisse = touch.clientX - swipeAbs;\n        if (swiping && Math.abs(abscisse) > 50 ) {\n            abscisse > 0 ? goLeft() : goRight()\n        }\n        setSwipeAbs(0)\n        setSwiping(false)\n    }\n\n    function modalOverview(){\n        return visible ? (\n            <div id=\"myModal\" className=\"modal\">\n                <span className=\"close\" onClick={closeModal}>&times;</span>\n                <span className=\"modal-left\" onClick={goLeft}>&lt;</span>\n                <span className=\"modal-right\" onClick={goRight}>&gt;</span>\n                <img className=\"modal-content\" onTouchStart={startTouching} onTouchMove={touching}\n                onTouchEnd={endTouching} src={painting ? painting.pic : null} alt=\"\"/>\n                <div className=\"caption\">\n                    <div className=\"caption-title\">{painting ? painting.name : ''}</div>\n                    <div className=\"caption-detail\">{painting ? painting.detail : ''}</div>\n                </div>\n            </div>\n        ) : <div></div>\n    }\n\n    return(\n        <div>\n            {modalOverview()}\n        </div>\n    )\n}\n\nexport default ModalComponent","import React, {useState, useEffect} from 'react'\nimport TextField from '@material-ui/core/TextField'\nimport Button from '@material-ui/core/Button'\nimport Icon from '@material-ui/core/Icon'\nimport DeleteIcon from '@material-ui/icons/Delete'\nimport '../Admin.css'\nimport configURL from '../../../helper/constant'\n\nimport CustomSelect from '../../common/CustomSelect'\nimport FileUploader from '../../common/FileUploader'\nimport CustomSnackbar from '../../common/CustomSnackbar'\n\nfunction CollectionEdit(props) {\n    const [collections, setCollections] = useState([''])\n    const [newBlob, setNewBlob] = useState(null)\n    const [selected, setSelected] = useState({})\n    const [isReinit, setIsReinit] = useState(false)\n    const [openSnack, setOpenSnack] = useState(false)\n    const [snackText, setSnackText] = useState(\"Collection sauvegardée en base de données\")\n    const snackEdit = \"Collection sauvegardée en base de données\"\n    const snackDelete = \"Collection supprimée de la base de données\"\n\n    useEffect(()=>{\n        setCollections(props.collectionNames)\n    },[props.collectionNames])\n\n    const getCollection = async (id)=>{\n        await fetch(`${configURL}/collection/`+id)\n        .then(response => response.json())\n        .then(result => {\n            if(result.pic){\n                const imageStr = Buffer.from(result.pic.data).toString('base64');\n                result.pic = \"data:image/jpeg;base64,\"+imageStr\n            }\n            return setSelected(result)\n        })\n    }\n\n    function getUploadedImg(img) {\n        setNewBlob(img)\n    }\n\n    const handleEdit = async(event)=>{\n        setOpenSnack(false)\n        event.preventDefault();\n        const data = new FormData(event.target);\n\n        const body = JSON.stringify({\n            id: selected.id,\n            name: data.get('title'),\n            detail: data.get('detail'),\n            pic: newBlob,\n        });\n\n        const headers = {\n            'content-type': 'application/json',\n            accept: 'application/json',\n        };\n        await fetch(`${configURL}/collection/`+selected.id, {\n            method: 'PUT',\n            headers,\n            body,\n        });\n        setSnackText(snackEdit)\n        handleReinit()\n    }\n\n    const handleDelete = async () => {\n        setOpenSnack(false)\n        if(selected){\n            const id = selected.id\n            await fetch(`${configURL}/collection/`+id, {\n                method: 'DELETE',\n                headers: {\n                    'content-type': 'application/json',\n                    accept: 'application/json',\n                },\n            });\n            setSnackText(snackDelete)\n            handleReinit()\n        }else{\n            console.log('erreur, pas de collection à supprimer')\n        }\n    }\n\n    function handleReinit(){\n        setOpenSnack(true)\n        props.changeInCollec()\n        setIsReinit(true)\n        setNewBlob(null)\n        setSelected({})\n        setCollections(props.collectionNames)\n    }\n\n    function handleChangeSelect(collecId) {\n        setIsReinit(false)\n        getCollection(collecId)\n    }\n\n    return (\n        <div className=\"edit\">\n            <div className=\"edit-row\">\n                <p><strong>Editer</strong> une collection existante</p>\n                <CustomSelect reinit={isReinit} list={collections} title=\"Collections\" handleChange={handleChangeSelect}/>\n            </div>\n            <form onSubmit={handleEdit} noValidate autoComplete=\"off\" key={selected ? selected.id : ''}>\n                <TextField \n                    className=\"input\"\n                    required\n                    id=\"standard-required\"\n                    label=\"Titre\"\n                    defaultValue={selected ? selected.name : ''}\n                    margin=\"normal\"\n                    name=\"title\"\n                    fullWidth\n                />\n                <TextField \n                    className=\"input\"\n                    id=\"standard-required\"\n                    label=\"Détail\"\n                    defaultValue={selected ? selected.detail : ''}\n                    margin=\"normal\"\n                    multiline={true}\n                    name=\"detail\"\n                    fullWidth\n                />\n                <FileUploader parentGiveImg={(selected && selected.pic) ? selected.pic : null} parentGetImg={getUploadedImg}/>\n                <div className=\"send\">\n                    <Button className=\"reinit\" variant=\"contained\" color=\"primary\" onClick={handleReinit} >\n                        Réinit.\n                        <Icon className=\"icon\">autorenew</Icon>\n                    </Button>\n                    <Button className=\"save\" type=\"submit\" variant=\"contained\" color=\"default\">\n                        Sauver\n                        <Icon className=\"icon\">send</Icon>\n                    </Button>\n                    <Button className=\"delete\" variant=\"contained\" color=\"secondary\" onClick={handleDelete}>\n                        Supprimer\n                        <DeleteIcon className=\"icon\" />\n                    </Button>\n                </div>\n            </form>\n            <CustomSnackbar handleOpen={openSnack} text={snackText} />\n        </div>\n    )\n}\n\nexport default CollectionEdit","import React, {useState, useEffect} from 'react'\nimport TextField from '@material-ui/core/TextField'\nimport Button from '@material-ui/core/Button'\nimport Icon from '@material-ui/core/Icon'\nimport DeleteIcon from '@material-ui/icons/Delete'\nimport '../Admin.css'\nimport './Painting.css'\nimport configURL from '../../../helper/constant'\n\nimport CustomSelect from '../../common/CustomSelect'\nimport FileUploader from '../../common/FileUploader'\n\nfunction PaintingEdit(props) {\n    const [tableauxName, setTableauxName] = useState([''])\n    const [collectionNames, setCollectionNames] = useState([])\n    const [newBlob, setNewBlob] = useState(null)\n    const [selected, setSelected] = useState({})\n    const [isReinit, setIsReinit] = useState(false)\n    const [collecId, setCollecId] = useState(null)\n\n    useEffect(()=>{\n        getTableauxName()\n        getCollectionName()\n    }, [props])\n\n    function getCollectionName() {\n        setCollectionNames(props.collectionNames)\n    }\n\n    const getTableauxName = async ()=>{\n        const response = []\n        await fetch(`${configURL}/painting/title`)\n        .then(response => response.json())\n        .then(result => result.map(painting => { return response.push(painting)}))\n        setTableauxName(response)\n    }\n\n    const getTableau = async (id)=>{\n        await fetch(`${configURL}/painting/`+id)\n        .then(response => response.json())\n        .then(result => {\n            const imageStr = result.pic.data ? Buffer.from(result.pic.data).toString('base64') : null;\n            \n            result.pic = \"data:image/jpeg;base64,\"+imageStr\n            return assignPainting(result)\n        })\n    }\n\n    function assignPainting(painting){\n        setSelected(painting)\n        painting ? setCollecId(painting.collectionId) : setCollecId(null)\n    }\n\n    // function arrayBufferToBase64(buffer) {\n    //     var binary = ''\n    //     var bytes = [].slice.call(new Uint8Array(buffer))\n    //     bytes.forEach((b) => binary += String.fromCharCode(b))\n    //     return binary;\n    // };\n\n    function getUploadedImg(img) {\n        setNewBlob(img)\n    }\n\n    const handleEdit = async(event)=>{\n        event.preventDefault()\n        const data = new FormData(event.target)\n\n        const body = JSON.stringify({\n            id: selected.id,\n            name: data.get('title'),\n            detail: data.get('detail'),\n            pic: newBlob,\n            collectionId: collecId,\n        })\n\n        const headers = {\n            'content-type': 'application/json',\n            accept: 'application/json',\n        }\n        await fetch(`${configURL}/painting/`+selected.id, {\n            method: 'PUT',\n            headers,\n            body,\n        })\n\n        handleReinit()\n    }\n\n    const handleDelete = async () => {\n        if(selected){\n            const id = selected.id\n            await fetch(`${configURL}/painting/`+id, {\n                method: 'DELETE',\n                headers: {\n                    'content-type': 'application/json',\n                    accept: 'application/json',\n                },\n            });\n            handleReinit()\n        }else{\n            console.log('erreur, pas de tableau à supprimer')\n        }\n    }\n\n    function handleReinit(){\n        setIsReinit(true)\n        setNewBlob(null)\n        setSelected({})\n        setCollecId(null)\n        setTableauxName([''])\n        getCollectionName()\n        getTableauxName()\n    }\n\n    function handleChangeSelectTab(tableauId) {\n        setIsReinit(false)\n        getTableau(tableauId)\n    }\n\n    function handleChangeSelectCollec(collectionId) {\n        setIsReinit(false)\n        setCollecId(collectionId)\n    }\n\n    return (\n        <div className=\"edit\">\n            <div className=\"edit-row\">\n                <p className=\"selectCollec\"><strong>Editer</strong> un tableau existant</p>\n                <CustomSelect reinit={isReinit} list={tableauxName} title=\"Tableaux\" handleChange={handleChangeSelectTab}/>\n            </div>\n            <CustomSelect init={collecId ? collecId : ''} reinit={isReinit} list={collectionNames} title=\"Collection du tableau *\" handleChange={handleChangeSelectCollec}/>\n            <form onSubmit={handleEdit} noValidate autoComplete=\"off\" key={selected ? selected.id : ''}>\n                <TextField \n                    className=\"input\"\n                    required\n                    id=\"standard-required\"\n                    label=\"Titre\"\n                    defaultValue={selected ? selected.name : ''}\n                    margin=\"normal\"\n                    name=\"title\"\n                    fullWidth\n                />\n                <TextField \n                    className=\"input\"\n                    id=\"standard-required\"\n                    label=\"Détail\"\n                    defaultValue={selected ? selected.detail : ''}\n                    margin=\"normal\"\n                    multiline={true}\n                    name=\"detail\"\n                    fullWidth\n                />\n                <FileUploader parentGiveImg={(selected && selected.pic) ? selected.pic : null} parentGetImg={getUploadedImg}/>\n                <div className=\"send\">\n                    <Button className=\"reinit\" variant=\"contained\" color=\"primary\" onClick={handleReinit} >\n                        Réinit.\n                        <Icon className=\"icon\">autorenew</Icon>\n                    </Button>\n                    <Button className=\"save\" type=\"submit\" variant=\"contained\" color=\"default\">\n                        Sauver\n                        <Icon className=\"icon\">send</Icon>\n                    </Button>\n                    <Button className=\"delete\" variant=\"contained\" color=\"secondary\" onClick={handleDelete}>\n                        Supprimer\n                        <DeleteIcon className=\"icon\" />\n                    </Button>\n                </div>\n            </form>\n        </div>\n    )\n}\n\nexport default PaintingEdit","import React, {useState, useEffect} from 'react'\nimport TextField from '@material-ui/core/TextField'\nimport Button from '@material-ui/core/Button'\nimport Icon from '@material-ui/core/Icon'\nimport './HomeAdmin.css'\nimport configURL from '../../helper/constant'\n\nimport FileUploader from '../common/FileUploader'\nimport CustomSnackbar from '../common/CustomSnackbar'\n\nfunction HomeAdmin() {\n    const [homePageData, setHomePageData] = useState({})\n    const [blob1, setBlob1] = useState(null)\n    const [blob2, setBlob2] = useState(null)\n    const [blob3, setBlob3] = useState(null)\n    const [openSnack, setOpenSnack] = useState(false)\n\n\n    useEffect(()=>{\n        getHomePageData()\n    }, [])\n\n    async function getHomePageData() {\n        await fetch(`${configURL}/home-data`)\n        .then(response => response.json())\n        .then(result => {\n            const imageStr1 = result[0].pic1.data ? Buffer.from(result[0].pic1.data).toString('base64') : null;\n            const imageStr2 = result[0].pic2.data ? Buffer.from(result[0].pic2.data).toString('base64') : null;\n            const imageStr3 = result[0].pic3.data ? Buffer.from(result[0].pic3.data).toString('base64') : null;\n            result[0].pic1 = \"data:image/jpeg;base64,\"+imageStr1\n            result[0].pic2 = \"data:image/jpeg;base64,\"+imageStr2\n            result[0].pic3 = \"data:image/jpeg;base64,\"+imageStr3\n            return setHomePageData(result[0])\n        })\n    }\n\n    const handleSubmit = async(event)=>{\n        setOpenSnack(false);\n        event.preventDefault()\n        const data = new FormData(event.target)\n\n        const body = JSON.stringify({\n            id: homePageData.id,\n            title: data.get('title'),\n            title_bloc1: data.get('title-bloc1'),\n            title_bloc2: data.get('title-bloc2'),\n            title_bloc3: data.get('title-bloc3'),\n            bloc1: data.get('bloc1'),\n            bloc2: data.get('bloc2'),\n            bloc3: data.get('bloc3'),\n            pic1: blob1,\n            pic2: blob2,\n            pic3: blob3,\n        })\n\n        const headers = {\n            'content-type': 'application/json',\n            accept: 'application/json',\n        }\n        await fetch(`${configURL}/home-data/`+homePageData.id, {\n            method: 'PUT',\n            headers,\n            body,\n        })\n        .then(response => (response.status === 200 || response.status === 204) ? setOpenSnack(true) : null)\n    }\n\n    function getUploadedImg1(img){\n        setBlob1(img)\n    }\n\n    function getUploadedImg2(img){\n        setBlob2(img)\n    }\n\n    function getUploadedImg3(img){\n        setBlob3(img)\n    }\n\n    return (\n        <div className=\"home-admin\">\n            <div className=\"home-admin-title\">\n                <h4>Editer la page d'accueil</h4>\n            </div>\n            <form onSubmit={handleSubmit} noValidate autoComplete=\"off\">\n                <div className=\"home-admin-form\" key={homePageData ? homePageData.id : ''}>\n                    <TextField\n                        className=\"input-home-admin\"\n                        required\n                        id=\"standard-required\"\n                        label=\"Titre de la page\"\n                        defaultValue={homePageData ? homePageData.title : ''}\n                        margin=\"normal\"\n                        name=\"title\"\n                        fullWidth\n                    />\n                    <div>\n                        <TextField \n                            className=\"input-home-admin\"\n                            id=\"standard-required\"\n                            label=\"Titre du premier bloc\"\n                            defaultValue={homePageData ? homePageData.title_bloc1 : ''}\n                            margin=\"normal\"\n                            multiline={true}\n                            name=\"title-bloc1\"\n                            fullWidth\n                        />\n                        <TextField \n                            className=\"input-home-admin\"\n                            id=\"standard-required\"\n                            label=\"Contenu de premier bloc\"\n                            defaultValue={homePageData ? homePageData.bloc1 : ''}\n                            margin=\"normal\"\n                            multiline={true}\n                            name=\"bloc1\"\n                            fullWidth\n                        />\n                        <FileUploader parentGiveImg={(homePageData && homePageData.pic1) ? homePageData.pic1 : null} parentGetImg={getUploadedImg1}/>\n                    </div>\n                    <div>\n                        <TextField \n                            className=\"input-home-admin\"\n                            id=\"standard-required\"\n                            label=\"Titre du second bloc\"\n                            defaultValue={homePageData ? homePageData.title_bloc2 : ''}\n                            margin=\"normal\"\n                            multiline={true}\n                            name=\"title-bloc2\"\n                            fullWidth\n                        />\n                        <TextField \n                            className=\"input-home-admin\"\n                            id=\"standard-required\"\n                            label=\"Contenu de second bloc\"\n                            defaultValue={homePageData ? homePageData.bloc2 : ''}\n                            margin=\"normal\"\n                            multiline={true}\n                            name=\"bloc2\"\n                            fullWidth\n                        />\n                        <FileUploader parentGiveImg={(homePageData && homePageData.pic2) ? homePageData.pic2 : null} parentGetImg={getUploadedImg2}/>\n                    </div>\n                    <div>\n                        <TextField \n                            className=\"input-home-admin\"\n                            id=\"standard-required\"\n                            label=\"Titre du troisème bloc\"\n                            defaultValue={homePageData ? homePageData.title_bloc3 : ''}\n                            margin=\"normal\"\n                            multiline={true}\n                            name=\"title-bloc3\"\n                            fullWidth\n                        />\n                        <TextField \n                            className=\"input-home-admin\"\n                            id=\"standard-required\"\n                            label=\"Contenu de troisième bloc\"\n                            defaultValue={homePageData ? homePageData.bloc3 : ''}\n                            margin=\"normal\"\n                            multiline={true}\n                            name=\"bloc3\"\n                            fullWidth\n                        />\n                        <FileUploader parentGiveImg={(homePageData && homePageData.pic3) ? homePageData.pic3 : null} parentGetImg={getUploadedImg3}/>\n                    </div>\n                    \n                </div>\n                \n                <div className=\"send\">\n                    <Button className=\"save\" type=\"submit\" variant=\"contained\" color=\"default\">\n                        Sauvegarder\n                        <Icon className=\"icon\">send</Icon>\n                    </Button>\n                </div>\n            </form>\n            <CustomSnackbar handleOpen={openSnack} text=\"Données de la page d'accueil sauvegardées en base de données\" />\n        </div>\n    )\n}\n\nexport default HomeAdmin","import React, {useState, useEffect} from 'react'\nimport PropTypes from 'prop-types'\nimport './FileUploader.css'\n\nvar propTypes = {\n    baseColor: PropTypes.string,\n    activeColor: PropTypes.string\n  },\n  \n  defaultProps = {\n    baseColor: 'gray',\n    activeColor: 'green',\n    overlayColor: 'rgba(255,255,255,0.3)'\n  };\n\nfunction FileUploader(props) {\n    const [active, setActive] = useState(false)\n    const [imageSrc, setImageSrc] = useState()\n    const [loaded, setLoaded] = useState(false)\n    const [labelClass, setLabelClass] = useState('uploader')\n    const [borderColor, setBorderColor] = useState(props.baseColor)\n    const [iconColor, setIconColor] = useState(props.baseColor)\n  \n    function onDragEnter(e) {\n        setActive(true)\n    }\n  \n    function onDragLeave(e) {\n        setActive(false)\n    }\n  \n    function onDragOver(e) { \n        e.preventDefault(); \n    }\n  \n    function onDrop(e) {\n        e.preventDefault();\n        setActive(false)\n        this.onFileChange(e, e.dataTransfer.files[0]);\n    }\n  \n    function onFileChange(e, fileInput) {\n        let file = fileInput || e.target.files[0],\n            pattern = /image-*/,\n            reader = new FileReader();\n          \n        if (!file.type.match(pattern)) {\n            alert('Format invalide');\n            return;\n        }\n      \n        setLoaded(false)\n      \n        reader.onload = (e) => {\n            setImageSrc(e.target.result)\n            setLoaded(true)\n        }\n        reader.readAsDataURL(file);\n\n    }\n\n    useEffect(()=>{\n        setLabelClass(`uploader ${loaded && 'loaded'}`)\n        const border = active ? props.activeColor : props.baseColor\n        const icon = active ? \n            props.activeColor : (loaded) ? \n                props.overlayColor : props.baseColor;\n        setBorderColor(border)\n        setIconColor(icon)\n    })\n\n    useEffect(()=> {\n        props.parentGetImg(imageSrc)\n    }, [imageSrc])\n\n    useEffect(()=>{\n        if(props.parentGiveImg && props.parentGiveImg.length > 0){\n            setImageSrc(props.parentGiveImg)\n            setLoaded(true)\n        }else if(props.parentGiveImg === null){\n            setImageSrc()\n        }\n    }, [props.parentGiveImg])\n      \n    return (\n        <label \n            className={labelClass}\n            onDragEnter={onDragEnter}\n            onDragLeave={onDragLeave} \n            onDragOver={onDragOver}\n            onDrop={onDrop}\n            key={imageSrc}\n            style={{outlineColor: borderColor}}>\n            <div className=\"text-drop\">\n                Placer une image ou cliquer\n            </div>\n            <img src={imageSrc} className={loaded ? 'loaded' : undefined} alt='uploaded'/>\n            <i className=\"icon icon-upload\" \n                style={{ color: iconColor }}></i>\n            <input type=\"file\" accept=\"image/*\" onChange={onFileChange} />\n        </label>\n    );\n}\n\nFileUploader.propTypes = propTypes;\nFileUploader.defaultProps = defaultProps;\n\nexport default FileUploader","import React, {useState, useEffect} from 'react';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\n\nfunction CustomSnackbar(props) {\n  const [open, setOpen] = useState(false);\n\n  useEffect(()=>{\n    setOpen(props.handleOpen);\n  }, [props.handleOpen])\n\n  function handleClose(event, reason) {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setOpen(false);\n  }\n\n  const closeStyle = {\n    padding: '5px'\n  }\n\n  return (\n    <div>\n      <Snackbar\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'center',\n        }}\n        open={open}\n        autoHideDuration={6000}\n        onClose={handleClose}\n        ContentProps={{\n          'aria-describedby': 'message-id',\n        }}\n        message={<span id=\"message-id\">{props.text}</span>}\n        action={[\n          <IconButton\n            key=\"close\"\n            aria-label=\"Close\"\n            color=\"inherit\"\n            className={closeStyle}\n            onClick={handleClose}\n          >\n            <CloseIcon />\n          </IconButton>,\n        ]}\n      />\n    </div>\n  );\n}\n\nexport default CustomSnackbar;","import React, {useState, useEffect} from \"react\";\nimport OutlinedInput from \"@material-ui/core/OutlinedInput\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\n\nimport './CustomSelect.css'\n\nfunction CustomSelect(props) {\n    const[listName, setListName] = useState(\"\")\n\n    function handleChange(event) {\n        const newVal = event.target.value;\n        setListName(newVal);\n        props.handleChange(newVal);\n    };\n    \n    useEffect(()=>{\n        props.init ? setListName(props.init) : setListName(\"\")\n    }, [props.init])\n\n    useEffect(()=>{\n        if(props.list && props.list.length > 0){\n            selectList()\n        }\n    },[props.list])\n\n    useEffect(()=>{\n        return props.reinit ? setListName(\"\") : undefined\n    }, [props.reinit])\n\n    function selectList(){\n        const items = props.list.map((unit, i) => \n            <MenuItem key={i} value={unit.id}>{unit.name}</MenuItem>\n        )\n        return items;\n    }\n\n    return (\n        <form autoComplete=\"off\">\n            <FormControl variant=\"outlined\" className=\"formControl\">\n                <InputLabel htmlFor=\"outlined-select-simple\">{props.title}</InputLabel>\n                <Select\n                    value={listName}\n                    onChange={handleChange}\n                    input={\n                        <OutlinedInput\n                        labelWidth={0}\n                        name=\"select\"\n                        id=\"outlined-select-simple\"\n                        />\n                    }\n                    >\n                    <MenuItem value=\"\">\n                        <em>Aucune</em>\n                    </MenuItem>\n                    {selectList()}\n                </Select>\n            </FormControl>\n        </form>\n    );\n  \n}\n\nexport default CustomSelect;\n","import React, {lazy, Suspense } from 'react'\n\nimport './CardHorizontal.css'\n\nconst ImageComponent = lazy(() => import('./ImageComponent'));\n\nfunction CardHorizontal(props) {\n\n\n  return (\n    <div className=\"horizontal-frame\">\n        <div className=\"horizontal-card\">\n            <div className=\"horizontal-painting\">\n                <Suspense fallback={<div>Loading...</div>}>\n                    <ImageComponent title={props.collection.name} idCollection={props.collection.id}/>\n                </Suspense>\n            </div>\n            <div className=\"horizontal-legend\">\n                <h5>{props.collection ? props.collection.name : ''}</h5>\n                <p>{props.collection ? props.collection.detail : ''}</p>\n            </div>\n        </div>\n    </div>\n  );\n}\n\nexport default CardHorizontal;\n","import React, { useState, useEffect } from 'react'\nimport {withRouter} from \"react-router-dom\";\nimport configURL from '../helper/constant'\n\nimport CardHorizontal from './common/CardHorizontal'\nimport './Galleries.css'\n\nfunction Galleries(props){\n    const [collections, setCollections] = useState([])\n\n    useEffect(()=>{\n        getCollectionsText()\n    },[])\n\n    const getCollectionsText = async ()=>{\n        const response = []\n        await fetch(`${configURL}/collection/title`)\n        .then(response => response.json())\n        .then(result => result.map(painting =>\n            // var imageStr = painting.pic ? arrayBufferToBase64(painting.pic.data) : null;\n            // painting.pic = imageStr\n            response.push(painting)))\n        setCollections(response.reverse())\n    }\n\n    // function arrayBufferToBase64(buffer) {\n    //     var binary = ''\n    //     var bytes = [].slice.call(new Uint8Array(buffer))\n    //     bytes.forEach((b) => binary += String.fromCharCode(b))\n    //     return binary\n    // }\n\n    function goTo(id){\n        props.history.push('/gallery/'+id);\n    }\n\n    function displayCollections(){\n        return collections.map(collec => \n            <div className=\"gallery-card\" key={collec.id} onClick={() => goTo(collec.id)}>\n                <CardHorizontal collection={collec} />\n            </div>\n        )\n    }\n\n    return(\n        <section className=\"galleries-page\">\n            <div className='galleries'>\n                <div className='galleries-title'>\n                    Mes collections de peintures\n                </div>\n                {/* <h1>Galerie</h1> */}\n                {displayCollections()}\n            </div>\n        </section>\n        \n    )\n}\n\nexport default withRouter(Galleries)","import React, { useEffect, useState, lazy, Suspense} from 'react'\nimport './Gallery.css'\nimport ModalComponent from './common/ModalComponent';\nimport configURL from '../helper/constant'\n\nconst SmallImageComponent = lazy(() => import('./common/SmallImageComponent'));\n\nfunction Gallery(props) {\n    const [paintings, setPaintings] = useState([])\n    const [openModal, setOpenModal] = useState(false)\n    const [idForModal, setIdForModal] = useState(null)\n    const [idsArray, setIdsArray] = useState([])\n    const [collectionName, setCollectionName] = useState('')\n\n    useEffect(()=>{\n        const { match: { params } } = props;\n        initGallery(params.collectionId)\n    }, [])\n\n    const initGallery = async (collecId)=>{\n        const response = []\n        await fetch((`${configURL}/gallery/`+collecId+'/text'))\n        .then(response => response.json())\n        .then(result => {\n            if(result.painting){\n                result.painting.map(paintingData => response.push(paintingData))\n            }\n            if(result.collection){\n                setCollectionName(result.collection.name)\n            }\n        })\n\n        sortPaintings(response)\n    }\n\n    function callModal(idPainting){\n        setOpenModal(true)\n        callParent(true)\n        setIdForModal(idPainting)\n    } \n\n    function closeModal(){\n        setOpenModal(false)\n        callParent(false)\n        setIdForModal(null)\n    }\n\n    const callParent = (open)=>{\n        props.notifyModalCall(open)\n    }\n\n    function createArrayOfIds(array){\n        const idsArray = array.reduce((acc, painting)=>{\n            acc.push(painting.id)\n            return acc\n        },[])\n        setIdsArray(idsArray)\n    }\n\n    function sortPaintings(array) {\n        const galleryContent = document.getElementById('gallery-content') || {};\n        const columns = Math.floor(galleryContent.clientWidth/370)\n        const out = [];\n        let col = 0\n        while(col < columns) {\n            for(let i = 0; i < array.length; i += columns) {\n                let _val = array[i + col];\n                if (_val !== undefined)\n                    out.push(_val);\n            }\n            col++;\n        }\n        setPaintings(out)\n        createArrayOfIds(array)\n    }\n\n    function printImages(){\n        const printPaintings = paintings.map(painting => \n            <Suspense key={painting.id} fallback={<div>Loading...</div>}>\n                <SmallImageComponent title={painting.name} idPainting={painting.id} detail={painting.detail} callModal={callModal} />\n            </Suspense>\n        )\n        return printPaintings\n    }\n\n    return(\n        <div className=\"gallery\">\n            <section className=\"gallery-grid\">\n                <div className=\"collection-name\">\n                    {collectionName}\n                </div>\n                <div id=\"gallery-content\" className=\"content\">\n                    {printImages()}\n                </div>\n            </section>\n            <ModalComponent open={openModal} idsArray={idsArray} idPainting={idForModal} close={closeModal}/>\n        </div>\n    )\n}\n\nexport default Gallery; ","import React from 'react'\n\nfunction Information() {\n    return(\n        <div>\n            <h1>Page Information à venir</h1>\n        </div>\n    )\n}\n\nexport default Information; ","import React, {useState} from 'react'\nimport './Contact.css'\nimport TextField from '@material-ui/core/TextField'\nimport Button from '@material-ui/core/Button'\nimport Icon from '@material-ui/core/Icon'\nimport CustomSnackbar from './common/CustomSnackbar'\nimport configURL from '../helper/constant'\n\nfunction Contact() {\n    const [errorName, setErrorName] = useState(false)\n    const [errorMail, setErrorMail] = useState(false)\n    const [errorMessage, setErrorMessage] = useState(false)\n    const [openSnack, setOpenSnack] = useState(false)\n\n    const validateLength = (data)=> {\n        return data && data.length > 0 ? false : true\n    }\n\n    const validEmailFormat = (data => {\n        const emailFormat = /\\S+@\\S+\\.\\S+/;\n        return !emailFormat.test(data);\n    })\n\n    const reinitErrors = () => {\n        setErrorName(false)\n        setErrorMail(false)\n        setErrorMessage(false)\n        setOpenSnack(false)\n    }\n\n    const checkErrors = (name, email, message)=> {\n        reinitErrors()\n        setErrorName(validateLength(name))\n        setErrorMail(validateLength(email) || validEmailFormat(email))\n        setErrorMessage(validateLength(message))\n        return validateLength(name) || validateLength(email) || validEmailFormat(email) || validateLength(message)\n    }\n\n    const submit = async (event)=> {\n        event.preventDefault()\n        const data = new FormData(event.target)\n        const name = data.get('name')\n        const email = data.get('email')\n        const subject = data.get('subject')\n        const message =data.get('message')\n\n\n        if(!checkErrors(name, email, message)) {\n            const body = JSON.stringify({\n                name,\n                email,\n                subject,\n                message\n            })\n            const headers = {\n                'content-type': 'application/json',\n                accept: 'application/json',\n            };\n            await fetch(`${configURL}/contact`, {\n                method: 'POST',\n                headers,\n                body,\n            })\n            .then(response => response.status === 201 ? successfulPost() : null)\n        }\n        \n    }\n\n    function successfulPost(){\n        document.getElementById(\"contact-form\").reset()\n        setOpenSnack(true)\n    }\n\n    return(\n        <section className=\"contact-page\">\n            <div className=\"contact\">\n                <h1>Contact</h1>\n                <p>Vous souhaitez être informé.e de mes prochaines expositions, me contacter ou me faire part de vos impressions ?</p>\n                <p>N'hésitez pas à utiliser ce formulaire, je vous répondrai avec plaisir.</p>\n            </div>\n            <form id=\"contact-form\" onSubmit={submit} noValidate autoComplete=\"off\">\n                <TextField \n                    className=\"input\"\n                    required\n                    id=\"standard-required\"\n                    label=\"Nom\"\n                    margin=\"normal\"\n                    name=\"name\"\n                    error={errorName}\n                    fullWidth\n                />\n                <TextField \n                    className=\"input\"\n                    required\n                    id=\"standard-required\"\n                    label=\"E-mail\"\n                    margin=\"normal\"\n                    name=\"email\"\n                    error={errorMail}\n                    fullWidth\n                />\n                <TextField \n                    className=\"input\"\n                    id=\"standard-required\"\n                    label=\"Sujet\"\n                    margin=\"normal\"\n                    name=\"subject\"\n                    fullWidth\n                />\n                <TextField \n                    className=\"input\"\n                    required\n                    id=\"standard-required\"\n                    label=\"Message\"\n                    margin=\"normal\"\n                    multiline={true}\n                    name=\"message\"\n                    error={errorMessage}\n                    fullWidth\n                />\n                {errorName || errorMail || errorMessage ? <p className=\"error\">Certains champs sont requis. Merci de les remplir correctement</p> : <span></span>}\n                <div className=\"send\">\n                    <Button className=\"save\" type=\"submit\" variant=\"contained\" color=\"primary\">\n                        Envoyer\n                        <Icon className=\"icon\">send</Icon>\n                    </Button>\n                </div>\n            </form>\n            <CustomSnackbar handleOpen={openSnack} text=\"Message envoyé avec succès\" />\n        </section>\n    )\n}\n\nexport default Contact; ","import React, {useState} from 'react'\nimport TextField from '@material-ui/core/TextField'\nimport Button from '@material-ui/core/Button'\nimport Icon from '@material-ui/core/Icon'\nimport '../Admin.css'\nimport configURL from '../../../helper/constant'\n\nimport FileUploader from '../../common/FileUploader'\nimport CustomSnackbar from '../../common/CustomSnackbar'\n\nfunction CollectionCreate(props) {\n    const [newBlob, setNewBlob] = useState(null)\n    const [openSnack, setOpenSnack] = useState(false)\n\n    function getUploadedImg(img) {\n        setNewBlob(img)\n    }\n\n    const handleSubmitCreate = async (event) => {\n        setOpenSnack(false)\n        event.preventDefault()\n        const data = new FormData(event.target)\n        \n        const body = JSON.stringify({\n            name: data.get('title'),\n            detail: data.get('detail'),\n            pic: newBlob,\n        })\n        const headers = {\n            'content-type': 'application/json',\n            accept: 'application/json',\n        };\n        await fetch(`${configURL}/collection`, {\n            method: 'POST',\n            headers,\n            body,\n        })\n        .then(response => response.status === 201 ? successfulPost() : null)\n    }\n\n    function successfulPost(){\n        setOpenSnack(true)\n        props.changeInCollec()\n        document.getElementById(\"collection-form-create\").reset()\n        setNewBlob(null)\n    }\n\n    return (\n        <div className=\"create\">\n            <p><strong>Créer</strong> une nouvelle collection</p>\n            <form id=\"collection-form-create\" onSubmit={handleSubmitCreate} noValidate autoComplete=\"off\">\n                <TextField \n                    className=\"input\"\n                    required\n                    id=\"standard-required\"\n                    label=\"Titre\"\n                    defaultValue=\"\"\n                    margin=\"normal\"\n                    name=\"title\"\n                    fullWidth\n                />\n                <TextField \n                    className=\"input\"\n                    id=\"standard-required\"\n                    label=\"Détail\"\n                    defaultValue=\"\"\n                    margin=\"normal\"\n                    multiline={true}\n                    name=\"detail\"\n                    fullWidth\n                />\n                <FileUploader parentGiveImg={newBlob} parentGetImg={getUploadedImg}/>\n\n                <Button className=\"send\" type=\"submit\" variant=\"contained\" color=\"default\" >\n                    Envoyer \n                    <Icon className=\"icon\">send</Icon>\n                </Button>\n            </form>\n            <CustomSnackbar handleOpen={openSnack} text=\"Collection sauvegardée en base de données\" />\n        </div>\n    )\n}\n\nexport default CollectionCreate","import React from 'react'\n\nimport CollectionCreate from './CollectionCreate'\nimport CollectionEdit from './CollectionEdit'\n\nfunction Collection(props) {\n\n    function triggerCollec(){\n        props.triggerCollec()\n    }\n\n    return (\n        <div className=\"collec\">\n            <CollectionCreate changeInCollec={triggerCollec} />\n            <CollectionEdit changeInCollec={triggerCollec} collectionNames={props.collectionNames} />\n        </div>\n    )\n}\n\nexport default Collection","import React, {useState, useEffect} from 'react'\nimport TextField from '@material-ui/core/TextField'\nimport Button from '@material-ui/core/Button'\nimport Icon from '@material-ui/core/Icon'\nimport '../Admin.css'\nimport configURL from '../../../helper/constant'\n\nimport CustomSelect from '../../common/CustomSelect'\nimport FileUploader from '../../common/FileUploader'\nimport CustomSnackbar from '../../common/CustomSnackbar'\n\nfunction PaintingCreate(props) {\n    const [newBlob, setNewBlob] = useState(null)\n    const [collectionNames, setCollectionNames] = useState([])\n    const [selectedCollection, setSelectedCollection] = useState({})\n    const [openSnack, setOpenSnack] = useState(false)\n    const [isReinit, setIsReinit] = useState(false)\n\n    useEffect(()=>{\n        setCollectionNames(props.collectionNames)\n    }, [props.collectionNames])\n\n    function getUploadedImg(img) {\n        setNewBlob(img)\n    }\n\n    const handleSubmitCreate = async (event) => {\n        event.preventDefault()\n        const data = new FormData(event.target)\n        \n        const body = JSON.stringify({\n            name: data.get('title'),\n            detail: data.get('detail'),\n            pic: newBlob,\n            likes: 0,\n            collectionId: selectedCollection.id,\n        })\n        const headers = {\n            'content-type': 'application/json',\n            accept: 'application/json',\n        }\n        await fetch(`${configURL}/painting`, {\n            method: 'POST',\n            headers,\n            body,\n        })\n        .then(response => response.status === 201 ? successfulPost() : null)\n    }\n\n    function successfulPost(){\n        setOpenSnack(true)\n        document.getElementById(\"painting-form-create\").reset()\n        setNewBlob(null)\n        setIsReinit(true)\n        props.updatePainting()\n    }\n\n    function handleChangeSelect(collecId) {\n        setIsReinit(false)\n        setSelectedCollection(collectionNames.find(collec => collec.id === collecId))\n    }\n\n    return (\n        <div className=\"create\">\n            <p><strong>Créer</strong> un nouveau tableau</p>\n            <CustomSelect reinit={isReinit} list={collectionNames} title=\"Collection du tableau *\" handleChange={handleChangeSelect}/>\n            <form id=\"painting-form-create\" onSubmit={handleSubmitCreate} noValidate autoComplete=\"off\">\n                <TextField \n                    className=\"input\"\n                    required\n                    id=\"standard-required\"\n                    label=\"Titre\"\n                    defaultValue=\"\"\n                    margin=\"normal\"\n                    name=\"title\"\n                    fullWidth\n                />\n                <TextField \n                    className=\"input\"\n                    id=\"standard-required\"\n                    label=\"Détail\"\n                    defaultValue=\"\"\n                    margin=\"normal\"\n                    multiline={true}\n                    name=\"detail\"\n                    fullWidth\n                />\n                <FileUploader parentGiveImg={newBlob} parentGetImg={getUploadedImg}/>\n\n                <Button className=\"send\" type=\"submit\" variant=\"contained\" color=\"default\" >\n                    Envoyer \n                    <Icon className=\"icon\">send</Icon>\n                </Button>\n            </form>\n            <CustomSnackbar handleOpen={openSnack} text=\"Tableau sauvegardé en base de données\" />\n        </div>\n    )\n}\n\nexport default PaintingCreate","import React, { useState } from 'react'\n\nimport PaintingCreate from './PaintingCreate'\nimport PaintingEdit from './PaintingEdit'\n\nfunction Painting(props) {\n    const [updatePaintingTrigger, setUpdatePaintingTrigger] = useState(false)\n\n    function triggerPaintings(){\n        setUpdatePaintingTrigger(!updatePaintingTrigger)\n    }\n\n    return(\n        <div className=\"collec\">\n            <PaintingCreate updatePainting={triggerPaintings} collectionNames={props.collectionNames} />\n            <PaintingEdit updatePaintings={updatePaintingTrigger} collectionNames={props.collectionNames} />\n        </div>\n    )\n}\n\nexport default Painting","import React from 'react'\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel'\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary'\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails'\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'\n\nimport './DropdownBar.css'\n\nfunction DropdownBar(props)  { \n\n    return(\n        <ExpansionPanel className=\"expansion\" >\n            <ExpansionPanelSummary className=\"title\" expandIcon={<ExpandMoreIcon />}>\n            <h4>{props.title}</h4>\n            </ExpansionPanelSummary>\n            <ExpansionPanelDetails>\n                {props.children}\n            </ExpansionPanelDetails>\n        </ExpansionPanel>\n    )\n}\n\nexport default DropdownBar","import React, {useState, useEffect} from 'react'\n\nimport configURL from '../../helper/constant'\nimport Collection from './Collections/Collection'\nimport Painting from './Paintings/Painting'\nimport HomeAdmin from './HomeAdmin'\nimport DropdownBar from '../common/DropdownBar'\n\nfunction Admin()  {\n    const [collectionNames, setCollectionNames] = useState([])\n\n    useEffect(()=>{\n        getCollectionName()\n    },[])\n\n    function triggerCollec(){\n        getCollectionName()\n    }\n\n    const getCollectionName = async ()=>{\n        const response = []\n        await fetch(`${configURL}/collection/title`)\n        .then(response => response.json())\n        .then(result => result.map(collec => response.push(collec)))\n        setCollectionNames(response)\n    }\n\n    return(\n        <div className=\"admin-page\">\n            <h1>Page d'administration du site</h1>\n            <DropdownBar title=\"Ajouter ou modifier une collection\">\n                <Collection triggerCollec={triggerCollec} collectionNames={collectionNames} />\n            </DropdownBar>\n\n            <DropdownBar title=\"Ajouter ou modifier un tableau\">\n                <Painting collectionNames={collectionNames} />\n            </DropdownBar>\n\n            <DropdownBar title=\"Modifier la page d'accueil\">\n                <HomeAdmin />\n            </DropdownBar>\n        </div>\n    )\n}\n\nexport default Admin;","//File used for the routes \nimport React from 'react'\nimport { Switch, Route } from 'react-router-dom'\n\nimport Home from './Home'\nimport Galleries from './Galleries'\nimport Gallery from './Gallery'\nimport Information from './Information'\nimport Contact from './Contact'\nimport Admin from './admin/Admin'\n\nconst Main = (props) => {\n\n    const modalChangeState = (open)=>{\n        props.changeScrollBecauseModal(open)\n    }\n\n    return (\n    <Switch>\n        <Route exact path=\"/\" component={Home} />\n        <Route exact path=\"/gallery\" component={Galleries} />\n        <Route path=\"/gallery/:collectionId\" render={(props) => <Gallery {...props} notifyModalCall={modalChangeState} />}/>\n        <Route path=\"/info\" component={Information} />\n        <Route path=\"/contact\" component={Contact} />\n        <Route path=\"/admin\" component={Admin} />\n    </Switch>\n    )\n}\n\nexport default Main\n","import React, { useState } from 'react'\nimport './App.css'\nimport { Layout, Drawer, Navigation, Content } from 'react-mdl'\nimport Main from './components/Main'\nimport { Link } from 'react-router-dom'\n\nfunction App() {\n  const [openTab, setOpenTab] = useState(-1)\n  const [inAdminPage] = useState(false)\n  const [classContent, setClassContent] = useState(\"main-content-modal-false\")\n\n  function pageLayout() {\n    const changeTab = (e)=>{\n      setOpenTab(Number(e.currentTarget.dataset.id))\n      if(window.innerWidth < 600){\n        const drawerElement = document.querySelector('.mdl-layout');\n        drawerElement.MaterialLayout.toggleDrawer();\n      }\n    }\n\n    const modalChangeState = (open)=>{\n        setClassContent(\"main-content-modal-\"+open)\n    }\n\n    if(inAdminPage){\n      return (\n        <Content>\n            <Main />\n        </Content>\n      )\n    }else{\n      return (\n        <Layout fixedDrawer>\n            <Drawer className=\"menu\" title=\"Menu\">\n            <hr/>\n                <Navigation>\n                    <Link onClick={changeTab} data-id=\"0\" className={openTab === 0 ? 'active-page' : ''} to=\"/\">Accueil</Link>\n                    <Link onClick={changeTab} data-id=\"1\" className={openTab === 1 ? 'active-page' : ''} to=\"/gallery\">Galeries</Link>\n                    <Link onClick={changeTab} data-id=\"2\" className={openTab === 2 ? 'active-page' : ''} to=\"/info\">Informations</Link>\n                    <Link onClick={changeTab} data-id=\"3\" className={openTab === 3 ? 'active-page' : ''} to=\"/contact\">Contact</Link>\n                </Navigation>\n            </Drawer>\n            <Content className={classContent}>\n               <Main changeScrollBecauseModal={modalChangeState} />\n            </Content>\n        </Layout>\n      )\n    }\n  }\n\n  return (\n    <div style={{height: '300px'}}>\n      {pageLayout()}\n  </div>\n  )\n}\n\nexport default App\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'react-mdl/extra/material.css';\nimport 'react-mdl/extra/material.js';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render((\n<BrowserRouter>\n    <App />\n</BrowserRouter>\n), document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}